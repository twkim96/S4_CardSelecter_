<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="twk.cardselecter.board.repository.BoardRepository">

	<!-- 글 목록 조회 -->
	<select id="getBoardSearchPageList" parameterType="twk.cardselecter.board.dto.param.BoardListParam"
		resultType="twk.cardselecter.board.entity.Board">
		SELECT seq, id, ref, step, depth, title, content, created_at createdAt, del, read_count readCount, b_like bLike
		FROM
					(SELECT row_number() OVER(ORDER BY ref DESC, step ASC) AS rnum,
					seq, id, ref, step, depth, title, content, created_at, del, read_count, b_like
					FROM board
					<if test="choice != null and choice != ''
								and search != null and search != '' ">
						<if test="choice == 'title'">
							WHERE title LIKE concat('%', #{search}, '%')
						</if>
						<if test="choice == 'content'">
							WHERE content LIKE concat('%', #{search}, '%')
						</if>
						<if test="choice == 'writer'">
							WHERE id=#{search}
						</if>
					</if>
					ORDER BY ref DESC, step ASC) a
		WHERE rnum BETWEEN ${pageStart} AND ${pageEnd}
	</select>

	<!-- 글 총 개수 조회 -->
	<select id="getBoardCount" parameterType="String" resultType="Integer">

		SELECT ifnull(count(*), 0)
		FROM board
		<if test="choice != null and choice != ''
		 			and search != null and search != '' ">
			<if test="choice == 'title'">
				WHERE title LIKE concat('%', #{search}, '%')
			</if>
			<if test="choice == 'content'">
				WHERE content LIKE concat('%', #{search}, '%')
			</if>
			<if test="choice == 'writer'">
				WHERE id=#{search}
			</if>
		</if>
	</select>

	<!-- 특정 게시글 조회 -->
	<select id="getBoard" parameterType="Integer" resultType="twk.cardselecter.board.entity.Board">
		SELECT seq, id, ref, step, depth, title, content, created_at createdAt, del, read_count readCount, b_like bLike
		FROM board
		WHERE seq=#{seq}
		ORDER BY ref DESC, step ASC
	</select>

	<!-- 게시글 조회수 레코드 생성 -->
	<insert id="createBoardHistory" parameterType="twk.cardselecter.board.entity.BoardHistory">
		INSERT INTO read_history (seq, id) VALUES (#{seq}, #{id});
	</insert>

	<!-- 게시글 조회수 수정 -->
	<update id="updateBoardHistory" parameterType="Integer">
		UPDATE board
		SET read_count = read_count + 1
		WHERE seq = #{seq};
	</update>

	<!-- 게시글 작성 -->
	<insert id="createBoard" parameterType="twk.cardselecter.board.entity.Board"
					useGeneratedKeys="true" keyProperty="seq">
		INSERT board (id, ref, step, depth, title, content, created_at, del, read_count, b_like)
		VALUES (#{id}, (SELECT ifnull(max(ref), 0)+1 from board b), 0, 0, #{title}, #{content}, NOW(), 0, 0, 0)
	</insert>

	<!-- 답글 작성 -->
	<!-- 부모 게시글 답글 위치 결정(아래에 추가, 가운데에 넣기)	-->
	<select id="updateBoardCheck" parameterType="Integer" resultType="Integer">
		select ifnull(min(step), 0)
		from board
		where ref = (select ref from board a where seq = #{parentSeq})
	  	and step > (select step from board b where seq = #{parentSeq})
		and (select depth from board c where seq = ${parentSeq}) >= depth
	</select>

	<!-- 부모 게시글 step 업데이트 -->
	<update id="updateBoardStep" parameterType="twk.cardselecter.board.dto.param.BoardStep">
		update board
		set step = step + 1
		where ref = (select ref from (select ref from board a where seq=#{parentSeq}) A)
		and step >= #{checkResult};
	</update>

	<!-- 새로운 답글 추가 -->
	<insert id="createBoardAnswer" parameterType="twk.cardselecter.board.dto.param.BoardAnswer"
					useGeneratedKeys="true" keyProperty="seq">
		INSERT board (id, ref, step, depth, title, content, created_at, del, read_count, b_like)
			<if test="checkResult == 0">
				values (#{id}, (SELECT ref FROM board a WHERE seq=#{parentSeq}),
				       (select ifnull(max(step), 0) + 1 from board b where ref=(select ref FROM board c WHERE seq=#{parentSeq})),
						(SELECT depth FROM board d WHERE seq=#{parentSeq}) + 1,
						#{title}, #{content}, NOW(), 0, 0, 0);
			</if>
			<if test="checkResult > 0">
				VALUES (#{id}, (SELECT ref FROM board e WHERE seq=#{parentSeq}),
				#{checkResult},
				(SELECT depth FROM board f WHERE seq=#{parentSeq}) + 1,
				#{title}, #{content}, NOW(), 0, 0, 0);
			</if>
	</insert>

	<!-- 게시글 수정 -->
	<!-- 수정 성공 시 1(수정한 레코드 개수) 을 반환, 실패 시 0 을 반환 -->
	<update id="updateBoard" parameterType="twk.cardselecter.board.entity.Board">
		UPDATE board
		SET content=#{content}, title=#{title}
		WHERE seq=#{seq}
	</update>

	<update id="deleteBoard" parameterType="Integer">
		UPDATE board
		SET del = 1
		WHERE seq=#{seq}
	</update>

	<!-- 게시글 좋아요	-->
	<!-- 게시글 좋아요 레코드 생성 -->
	<insert id="createBoardLike" parameterType="twk.cardselecter.board.entity.BoardLike">
		INSERT INTO board_like (seq, id) VALUES (#{seq}, #{id});
	</insert>

	<!-- 게시글 좋아 수정 -->
	<update id="updateBoardLike" parameterType="Integer">
		UPDATE board
		SET b_like = b_like + 1
		WHERE seq = #{seq};
	</update>

	<!-- 커스텀카드 게시글 연관 테이블 생성 -->
	<insert id="createCustomCardToBoard" parameterType="twk.cardselecter.board.entity.CustomCardToBoard">
		INSERT INTO custom_card_to_board(filepath, seq)
		VALUES (#{filePath}, #{seq})
		on duplicate key update filepath=#{filePath}, seq=#{seq}
	</insert>

	<!-- 커스텀 카드 삭제 -->
	<delete id="deleteCustomCardToBoard" parameterType="twk.cardselecter.board.entity.CustomCardToBoard">
		delete from custom_card_to_board
		where seq=#{seq}
	</delete>

	<!-- 게시글 커스텀 카드 출력-->
	<select id="getCustomCardToBoard" parameterType="Integer" resultType="String">
		select filepath
		from custom_card_to_board
		where seq=#{seq}
	</select>
</mapper>



